{"ast":null,"code":"var _jsxFileName = \"/Users/vemula/Downloads/ADT/finalproject/myspotify/src/components/RadarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RadarChart = props => {\n  _s();\n  const {\n    data\n  } = props;\n  console.log(data);\n  const [selectedArtist, setSelectedArtist] = useState(\"\");\n  const handleArtistChange = event => {\n    setSelectedArtist(event.target.value);\n  };\n  const artistData = data[selectedArtist];\n  const chartData = {\n    labels: artistData ? artistData.map(song => song.song) : [],\n    datasets: [{\n      label: \"Popularity\",\n      data: artistData ? artistData.map(song => song.popularity) : [],\n      backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n      borderColor: \"rgba(255, 99, 132, 1)\",\n      pointBackgroundColor: \"rgba(255, 99, 132, 1)\",\n      pointBorderColor: \"#fff\",\n      pointHoverBackgroundColor: \"#fff\",\n      pointHoverBorderColor: \"rgba(255, 99, 132, 1)\"\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    scale: {\n      ticks: {\n        beginAtZero: true,\n        max: 100,\n        min: 0,\n        stepSize: 20\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedArtist,\n        onChange: handleArtistChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Please select an artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), Object.keys(data).map(artistName => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: artistName,\n          children: artistName\n        }, artistName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), artistData ? /*#__PURE__*/_jsxDEV(Radar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RadarChart, \"sRTFJ3GvcN0w/d3pxmVdplce0RM=\");\n_c = RadarChart;\nexport default RadarChart;\nvar _c;\n$RefreshReg$(_c, \"RadarChart\");","map":{"version":3,"names":["React","useState","Radar","jsxDEV","_jsxDEV","RadarChart","props","_s","data","console","log","selectedArtist","setSelectedArtist","handleArtistChange","event","target","value","artistData","chartData","labels","map","song","datasets","label","popularity","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","chartOptions","responsive","scale","ticks","beginAtZero","max","min","stepSize","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","artistName","options","_c","$RefreshReg$"],"sources":["/Users/vemula/Downloads/ADT/finalproject/myspotify/src/components/RadarChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Radar } from \"react-chartjs-2\";\n\nconst RadarChart = (props) => {\n  const { data } = props;\n  console.log(data)\n  const [selectedArtist, setSelectedArtist] = useState(\"\");\n  \n  const handleArtistChange = (event) => {\n    setSelectedArtist(event.target.value);\n  };\n\n  const artistData = data[selectedArtist];\n\n  const chartData = {\n    labels: artistData ? artistData.map((song) => song.song) : [],\n    datasets: [\n      {\n        label: \"Popularity\",\n        data: artistData ? artistData.map((song) => song.popularity) : [],\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        pointBackgroundColor: \"rgba(255, 99, 132, 1)\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgba(255, 99, 132, 1)\",\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    scale: {\n      ticks: {\n        beginAtZero: true,\n        max: 100,\n        min: 0,\n        stepSize: 20,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <label>\n        {/* Select an artist: */}\n        <select value={selectedArtist} onChange={handleArtistChange}>\n          <option value=\"\">Please select an artist</option>\n          {Object.keys(data).map((artistName) => (\n            <option value={artistName} key={artistName}>\n              {artistName}\n            </option>\n          ))}\n        </select>\n      </label>\n      {artistData ? (\n        <Radar data={chartData} options={chartOptions} />\n      ) : (\n        <p>No data to display.</p>\n      )}\n    </div>\n  );\n};\n\nexport default RadarChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAK,CAAC,GAAGF,KAAK;EACtBG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,kBAAkB,GAAIC,KAAK,IAAK;IACpCF,iBAAiB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,UAAU,GAAGT,IAAI,CAACG,cAAc,CAAC;EAEvC,MAAMO,SAAS,GAAG;IAChBC,MAAM,EAAEF,UAAU,GAAGA,UAAU,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACA,IAAI,CAAC,GAAG,EAAE;IAC7DC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,YAAY;MACnBf,IAAI,EAAES,UAAU,GAAGA,UAAU,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,UAAU,CAAC,GAAG,EAAE;MACjEC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,oBAAoB,EAAE,uBAAuB;MAC7CC,gBAAgB,EAAE,MAAM;MACxBC,yBAAyB,EAAE,MAAM;MACjCC,qBAAqB,EAAE;IACzB,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE;MACLC,KAAK,EAAE;QACLC,WAAW,EAAE,IAAI;QACjBC,GAAG,EAAE,GAAG;QACRC,GAAG,EAAE,CAAC;QACNC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EAED,oBACElC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,eAEEnC,OAAA;QAAQY,KAAK,EAAEL,cAAe;QAAC6B,QAAQ,EAAE3B,kBAAmB;QAAA0B,QAAA,gBAC1DnC,OAAA;UAAQY,KAAK,EAAC,EAAE;UAAAuB,QAAA,EAAC;QAAuB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,EAChDC,MAAM,CAACC,IAAI,CAACtC,IAAI,CAAC,CAACY,GAAG,CAAE2B,UAAU,iBAChC3C,OAAA;UAAQY,KAAK,EAAE+B,UAAW;UAAAR,QAAA,EACvBQ;QAAU,GADmBA,UAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAG3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,EACP3B,UAAU,gBACTb,OAAA,CAACF,KAAK;MAACM,IAAI,EAAEU,SAAU;MAAC8B,OAAO,EAAEjB;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAEjDxC,OAAA;MAAAmC,QAAA,EAAG;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACrC,EAAA,CA3DIF,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AA6DhB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}