{"ast":null,"code":"var _jsxFileName = \"/Users/vemula/Downloads/ADT/finalproject/myspotify/src/pages/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SongList.css\";\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatDuration(milliseconds) {\n  const minutes = Math.floor(milliseconds / 60000);\n  const seconds = Math.floor(milliseconds % 60000 / 1000);\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n}\nconst SongList = () => {\n  _s();\n  const location = useLocation();\n  const email_id = location.state.email;\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://cxvk7cmck9.execute-api.us-east-1.amazonaws.com/staging\").then(response => {\n      console.log(response.data);\n      const resp_songs = response.data;\n      const formattedSongs = resp_songs.map(song => ({\n        ...song,\n        duration: formatDuration(song.duration)\n      }));\n      setSongs(formattedSongs);\n      axios.post(\"https://clmqbf5t2h.execute-api.us-east-1.amazonaws.com/fav_main\", {\n        email_id: email_id,\n        song_id: \"\"\n      }).then(response => {\n        console.log(response.data);\n        const favorite_songs = response.data;\n        const updatedSongs = [];\n        for (let i = 0; i < songs.length; i++) {\n          let song = songs[i];\n          let isFavorite = favorite_songs.includes(song.song_id);\n          song.isFavorite = isFavorite;\n          updatedSongs.push(song);\n        }\n        console.log(songs, updatedSongs);\n      }).catch(error => console.log(error));\n    }).catch(error => console.log(error));\n  }, [email_id]);\n  const handleAddToFavorites = id => {\n    const updatedSongs = songs.map(song => {\n      if (song.id === id) {\n        return {\n          ...song,\n          isFavorite: true\n        };\n      }\n      return song;\n    });\n    setSongs(updatedSongs);\n  };\n  const handleRemoveFromFavorites = id => {\n    const updatedSongs = songs.map(song => {\n      if (song.id === id) {\n        return {\n          ...song,\n          isFavorite: false\n        };\n      }\n      return song;\n    });\n    setSongs(updatedSongs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        backgroundColor: \"#1DB954\",\n        height: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          height: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          style: {\n            color: \"#191414\",\n            textDecoration: \"none\",\n            margin: \"0 20px\",\n            fontSize: \"24px\"\n          },\n          children: \"MySpotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/visualizations\",\n          style: {\n            color: \"#191414\",\n            textDecoration: \"none\",\n            margin: \"0 20px\",\n            fontSize: \"20px\"\n          },\n          children: \"Visualizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songlist-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Most played songs this week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"songlist\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Song Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Artist Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Album Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Song Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: songs.map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.song\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.album\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.isFavorite ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"songlist-item-remove-from-favorites\",\n                  onClick: () => handleRemoveFromFavorites(song.id),\n                  children: \"Unfavorite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"songlist-item-add-to-favorites\",\n                onClick: () => handleAddToFavorites(song.id),\n                children: \"Favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)]\n          }, song.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(SongList, \"PQhIL+RDpj5k0kuYTknTnnJ2ZRk=\", false, function () {\n  return [useLocation];\n});\n_c = SongList;\nexport default SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDuration","milliseconds","minutes","Math","floor","seconds","SongList","_s","location","email_id","state","email","songs","setSongs","get","then","response","console","log","data","resp_songs","formattedSongs","map","song","duration","post","song_id","favorite_songs","updatedSongs","i","length","isFavorite","includes","push","catch","error","handleAddToFavorites","id","handleRemoveFromFavorites","children","style","backgroundColor","height","display","alignItems","justifyContent","to","color","textDecoration","margin","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","className","artist","album","onClick","_c","$RefreshReg$"],"sources":["/Users/vemula/Downloads/ADT/finalproject/myspotify/src/pages/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SongList.css\";\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\n\nfunction formatDuration(milliseconds) {\n\tconst minutes = Math.floor(milliseconds / 60000);\n\tconst seconds = Math.floor((milliseconds % 60000) / 1000);\n\treturn `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n}\n  \n\nconst SongList = () => {\n\tconst location = useLocation();\n    const email_id = location.state.email;\n\tconst [songs, setSongs] = useState([]);\n\n\tuseEffect(() => {\n\t\taxios.get(\"https://cxvk7cmck9.execute-api.us-east-1.amazonaws.com/staging\")\n\t\t.then(response => {\n\t\t\tconsole.log(response.data)\n\t\t\tconst resp_songs = response.data\n\t\t\tconst formattedSongs = resp_songs.map(song => ({\n\t\t\t\t...song,\n\t\t\t\tduration: formatDuration(song.duration)\n\t\t\t}));\n\t\t\tsetSongs(formattedSongs)\n\t\t\t\n\t\t\taxios.post(\"https://clmqbf5t2h.execute-api.us-east-1.amazonaws.com/fav_main\", {email_id: email_id, song_id: \"\"})\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response.data)\n\t\t\t\tconst favorite_songs = response.data\n\t\t\t\tconst updatedSongs = [];\n\n\t\t\t\tfor (let i = 0; i < songs.length; i++) {\n\t\t\t\t  let song = songs[i];\n\t\t\t\t  let isFavorite = favorite_songs.includes(song.song_id);\n\t\t\t\t  song.isFavorite = isFavorite;\n\t\t\t\t  updatedSongs.push(song);\n\t\t\t\t}\n\n\t\t\t\tconsole.log(songs, updatedSongs)\n\t\t\t})\n\t\t\t.catch(error => console.log(error));\n\t\t})\n\t\t.catch(error => console.log(error));\n\n\t}, [email_id]);\n  \n    const handleAddToFavorites = (id) => {\n      const updatedSongs = songs.map((song) => {\n        if (song.id === id) {\n          return { ...song, isFavorite: true };\n        }\n        return song;\n      });\n      setSongs(updatedSongs);\n    };\n  \n    const handleRemoveFromFavorites = (id) => {\n      const updatedSongs = songs.map((song) => {\n        if (song.id === id) {\n          return { ...song, isFavorite: false };\n        }\n        return song;\n      });\n      setSongs(updatedSongs);\n    };\n  \n\n    return (\n        <div>\n            <nav style={{ backgroundColor: \"#1DB954\", height: \"50px\" }}>\n              <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", height: \"100%\" }}>\n                <Link to=\"/\" style={{ color: \"#191414\", textDecoration: \"none\", margin: \"0 20px\", fontSize: \"24px\" }}>\n                  MySpotify\n                </Link>\n                <Link to=\"/visualizations\" style={{ color: \"#191414\", textDecoration: \"none\", margin: \"0 20px\", fontSize: \"20px\" }}>\n                  Visualizations\n                </Link>\n              </div>\n            </nav>\n            <div className=\"songlist-container\">\n                <h2>Most played songs this week</h2>\n                <table className=\"songlist\">\n                    <thead>\n                    <tr>\n                        <th>Song Name</th>\n                        <th>Artist Name</th>\n\t\t\t\t\t\t            <th>Album Name</th>\n                        <th>Song Duration</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {songs.map((song) => (\n                        <tr key={song.id}>\n                        <td>{song.song}</td>\n                        <td>{song.artist}</td>\n\t\t\t\t\t\t            <td>{song.album}</td>\n                        <td>{song.duration}</td>\n                        <td>\n                            {song.isFavorite ? (\n                            <>\n                                <button\n                                className=\"songlist-item-remove-from-favorites\"\n                                onClick={() => handleRemoveFromFavorites(song.id)}\n                                >\n                                Unfavorite\n                                </button>\n                            </>\n                            ) : (\n                            <button\n                                className=\"songlist-item-add-to-favorites\"\n                                onClick={() => handleAddToFavorites(song.id)}\n                            >\n                                Favorite\n                            </button>\n                            )}\n                        </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default SongList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,cAAcA,CAACC,YAAY,EAAE;EACrC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,GAAG,KAAK,CAAC;EAChD,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,YAAY,GAAG,KAAK,GAAI,IAAI,CAAC;EACzD,OAAQ,GAAEC,OAAQ,IAAGG,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,OAAQ,EAAC;AACzD;AAGA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAC3B,MAAMc,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAACC,KAAK;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACfG,KAAK,CAACoB,GAAG,CAAC,gEAAgE,CAAC,CAC1EC,IAAI,CAACC,QAAQ,IAAI;MACjBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B,MAAMC,UAAU,GAAGJ,QAAQ,CAACG,IAAI;MAChC,MAAME,cAAc,GAAGD,UAAU,CAACE,GAAG,CAACC,IAAI,KAAK;QAC9C,GAAGA,IAAI;QACPC,QAAQ,EAAExB,cAAc,CAACuB,IAAI,CAACC,QAAQ;MACvC,CAAC,CAAC,CAAC;MACHX,QAAQ,CAACQ,cAAc,CAAC;MAExB3B,KAAK,CAAC+B,IAAI,CAAC,iEAAiE,EAAE;QAAChB,QAAQ,EAAEA,QAAQ;QAAEiB,OAAO,EAAE;MAAE,CAAC,CAAC,CAC/GX,IAAI,CAACC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;QAC1B,MAAMQ,cAAc,GAAGX,QAAQ,CAACG,IAAI;QACpC,MAAMS,YAAY,GAAG,EAAE;QAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,KAAK,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAE;UACrC,IAAIN,IAAI,GAAGX,KAAK,CAACiB,CAAC,CAAC;UACnB,IAAIE,UAAU,GAAGJ,cAAc,CAACK,QAAQ,CAACT,IAAI,CAACG,OAAO,CAAC;UACtDH,IAAI,CAACQ,UAAU,GAAGA,UAAU;UAC5BH,YAAY,CAACK,IAAI,CAACV,IAAI,CAAC;QACzB;QAEAN,OAAO,CAACC,GAAG,CAACN,KAAK,EAAEgB,YAAY,CAAC;MACjC,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAIlB,OAAO,CAACC,GAAG,CAACiB,KAAK,CAAC,CAAC;IACpC,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAIlB,OAAO,CAACC,GAAG,CAACiB,KAAK,CAAC,CAAC;EAEpC,CAAC,EAAE,CAAC1B,QAAQ,CAAC,CAAC;EAEX,MAAM2B,oBAAoB,GAAIC,EAAE,IAAK;IACnC,MAAMT,YAAY,GAAGhB,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACc,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGd,IAAI;UAAEQ,UAAU,EAAE;QAAK,CAAC;MACtC;MACA,OAAOR,IAAI;IACb,CAAC,CAAC;IACFV,QAAQ,CAACe,YAAY,CAAC;EACxB,CAAC;EAED,MAAMU,yBAAyB,GAAID,EAAE,IAAK;IACxC,MAAMT,YAAY,GAAGhB,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACc,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGd,IAAI;UAAEQ,UAAU,EAAE;QAAM,CAAC;MACvC;MACA,OAAOR,IAAI;IACb,CAAC,CAAC;IACFV,QAAQ,CAACe,YAAY,CAAC;EACxB,CAAC;EAGD,oBACI/B,OAAA;IAAA0C,QAAA,gBACI1C,OAAA;MAAK2C,KAAK,EAAE;QAAEC,eAAe,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAH,QAAA,eACzD1C,OAAA;QAAK2C,KAAK,EAAE;UAAEG,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE,eAAe;UAAEH,MAAM,EAAE;QAAO,CAAE;QAAAH,QAAA,gBACrG1C,OAAA,CAACJ,IAAI;UAACqD,EAAE,EAAC,GAAG;UAACN,KAAK,EAAE;YAAEO,KAAK,EAAE,SAAS;YAAEC,cAAc,EAAE,MAAM;YAAEC,MAAM,EAAE,QAAQ;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAEtG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACPzD,OAAA,CAACJ,IAAI;UAACqD,EAAE,EAAC,iBAAiB;UAACN,KAAK,EAAE;YAAEO,KAAK,EAAE,SAAS;YAAEC,cAAc,EAAE,MAAM;YAAEC,MAAM,EAAE,QAAQ;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAEpH;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACNzD,OAAA;MAAK0D,SAAS,EAAC,oBAAoB;MAAAhB,QAAA,gBAC/B1C,OAAA;QAAA0C,QAAA,EAAI;MAA2B;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpCzD,OAAA;QAAO0D,SAAS,EAAC,UAAU;QAAAhB,QAAA,gBACvB1C,OAAA;UAAA0C,QAAA,eACA1C,OAAA;YAAA0C,QAAA,gBACI1C,OAAA;cAAA0C,QAAA,EAAI;YAAS;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eAClBzD,OAAA;cAAA0C,QAAA,EAAI;YAAW;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eAC1BzD,OAAA;cAAA0C,QAAA,EAAI;YAAU;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACbzD,OAAA;cAAA0C,QAAA,EAAI;YAAa;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACtBzD,OAAA;cAAA0C,QAAA,EAAI;YAAO;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACf;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACG,eACRzD,OAAA;UAAA0C,QAAA,EACC3B,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACZ1B,OAAA;YAAA0C,QAAA,gBACA1C,OAAA;cAAA0C,QAAA,EAAKhB,IAAI,CAACA;YAAI;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACpBzD,OAAA;cAAA0C,QAAA,EAAKhB,IAAI,CAACiC;YAAM;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eAC5BzD,OAAA;cAAA0C,QAAA,EAAKhB,IAAI,CAACkC;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACfzD,OAAA;cAAA0C,QAAA,EAAKhB,IAAI,CAACC;YAAQ;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACxBzD,OAAA;cAAA0C,QAAA,EACKhB,IAAI,CAACQ,UAAU,gBAChBlC,OAAA,CAAAE,SAAA;gBAAAwC,QAAA,eACI1C,OAAA;kBACA0D,SAAS,EAAC,qCAAqC;kBAC/CG,OAAO,EAAEA,CAAA,KAAMpB,yBAAyB,CAACf,IAAI,CAACc,EAAE,CAAE;kBAAAE,QAAA,EACjD;gBAED;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAS,iBACV,gBAEHzD,OAAA;gBACI0D,SAAS,EAAC,gCAAgC;gBAC1CG,OAAO,EAAEA,CAAA,KAAMtB,oBAAoB,CAACb,IAAI,CAACc,EAAE,CAAE;gBAAAE,QAAA,EAChD;cAED;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACA;UAAA,GAvBI/B,IAAI,CAACc,EAAE;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAyBnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAC/C,EAAA,CAnHID,QAAQ;EAAA,QACIX,WAAW;AAAA;AAAAgE,EAAA,GADvBrD,QAAQ;AAqHd,eAAeA,QAAQ;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}